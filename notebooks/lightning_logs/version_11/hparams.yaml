attention_head_size: 1
categorical_groups: {}
dropout: 0.1
embedding_labels: {}
embedding_paddings: []
embedding_sizes: {}
hidden_continuous_size: 8
hidden_continuous_sizes: {}
hidden_size: 16
learning_rate: 0.03
log_gradient_flow: false
log_interval: -1
log_val_interval: null
lstm_layers: 1
max_encoder_length: 24
monotone_constaints: {}
optimizer: ranger
optimizer_params: null
output_size: 7
output_transformer: !!python/object:pytorch_forecasting.data.encoders.EncoderNormalizer
  center: true
  center_: !!python/object/apply:torch._utils._rebuild_tensor_v2
  - !!python/object/apply:torch.storage._load_from_bytes
    - !!binary |
      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
      Z2UKcQFYCgAAADU3NjgyODk0NTZxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAoAAAA1NzY4Mjg5
      NDU2cQFhLgEAAAAAAAAAC1etQw==
  - 0
  - !!python/tuple []
  - !!python/tuple []
  - false
  - !!python/object/apply:collections.OrderedDict
    - []
  eps: 1.0e-08
  max_length: null
  method: standard
  scale_: !!python/object/apply:torch._utils._rebuild_tensor_v2
  - !!python/object/apply:torch.storage._load_from_bytes
    - !!binary |
      gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAA
      AGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAA
      aW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3Jh
      Z2UKcQFYCgAAADU3NTEyMDkyMzJxAlgDAAAAY3B1cQNLAU50cQRRLoACXXEAWAoAAAA1NzUxMjA5
      MjMycQFhLgEAAAAAAAAAgssCOA==
  - 0
  - !!python/tuple []
  - !!python/tuple []
  - false
  - !!python/object/apply:collections.OrderedDict
    - []
  transformation: relu
reduce_on_plateau_min_lr: 1.0e-05
reduce_on_plateau_patience: 4
reduce_on_plateau_reduction: 2.0
share_single_variable_networks: false
static_categoricals: []
static_reals:
- encoder_length
- formula_price_with_tax_petrol_center
- formula_price_with_tax_petrol_scale
time_varying_categoricals_decoder: []
time_varying_categoricals_encoder: []
time_varying_reals_decoder:
- time_idx
- relative_time_idx
time_varying_reals_encoder:
- time_idx
- relative_time_idx
- formula_price_with_tax_petrol
weight_decay: 0.0
x_categoricals: []
x_reals:
- encoder_length
- formula_price_with_tax_petrol_center
- formula_price_with_tax_petrol_scale
- time_idx
- relative_time_idx
- formula_price_with_tax_petrol
